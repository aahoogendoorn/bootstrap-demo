<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:composite="http://java.sun.com/jsf/composite" xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
        >

    <!-- INTERFACE -->
    <composite:interface>
        <composite:attribute name="required" type="java.lang.Boolean" default="false"/>
        <composite:attribute name="readonly" type="java.lang.Boolean" default="false"/>
        <composite:attribute name="label" type="java.lang.String"/>
        <composite:attribute name="tabindex" type="java.lang.String"/>
        <composite:attribute name="onchange" type="java.lang.String"/>
        <composite:attribute name="value" type="java.lang.Object"/>
        <composite:attribute name="options" type="java.lang.Object"/>
        <composite:clientBehavior name="change" event="change" targets="p#{cc.attrs.id}"/>
        <composite:attribute name="converterId" type="java.lang.String"/>
        <composite:attribute name="style" type="java.lang.String"/>
    </composite:interface>

    <!-- IMPLEMENTATION -->
    <composite:implementation>
        <div class="form-group">
            <label for="p#{cc.attrs.id}">#{cc.attrs.label}</label>
            <h:selectOneMenu
                    value="#{cc.attrs.value}"
                    id="p#{cc.attrs.id}"
                    required="#{cc.attrs.required}"
                    disabled="#{cc.attrs.readonly}"
                    styleClass="form-control"
                    tabindex="#{cc.attrs.tabindex}"
                    style="#{cc.attrs.style}"
                    onchange="#{cc.attrs.onchange}"
                    >
                <f:selectItems value="#{cc.attrs.options}"/>
                <c:if test="#{not empty cc.attrs.converterId}">
                    <f:converter converterId="#{cc.attrs.converterId}"/>
                </c:if>
                <composite:insertChildren/>
            </h:selectOneMenu>

        </div>
    </composite:implementation>
</ui:composition>